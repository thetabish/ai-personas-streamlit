#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Einfacher Setup-Checker f√ºr das Synthetische Interview System
"""

import os
from dotenv import load_dotenv

def check_setup():
    """Pr√ºft ob alles korrekt eingerichtet ist"""
    print("üîç Pr√ºfe System-Setup...")
    print()
    
    # .env Datei laden
    if os.path.exists('.env'):
        load_dotenv()
        print("‚úÖ .env Datei gefunden")
    else:
        print("‚ùå .env Datei nicht gefunden!")
        return False
    
    # API-Schl√ºssel pr√ºfen
    api_key = os.getenv('OPENROUTER_API_KEY')
    
    if not api_key:
        print("‚ùå OPENROUTER_API_KEY nicht in .env Datei gefunden!")
        return False
    
    if api_key == "your_openrouter_api_key_here":
        print("‚ùå Standard-Platzhalter gefunden!")
        print("   Bitte ersetzen Sie 'your_openrouter_api_key_here' in der .env Datei")
        print("   mit Ihrem echten OpenRouter API-Schl√ºssel.")
        print()
        print("   So erhalten Sie einen kostenlosen API-Schl√ºssel:")
        print("   1. Gehen Sie zu: https://openrouter.ai/mistralai/mistral-small-24b-instruct-2501:free/api")
        print("   2. Erstellen Sie ein kostenloses Konto")
        print("   3. Kopieren Sie Ihren API-Schl√ºssel")
        print("   4. Ersetzen Sie den Platzhalter in der .env Datei")
        return False
    
    if not api_key.startswith("sk-or-v1-"):
        print("‚ùå Ung√ºltiges API-Schl√ºssel-Format!")
        print("   OpenRouter API-Schl√ºssel m√ºssen mit 'sk-or-v1-' beginnen.")
        print(f"   Ihr Schl√ºssel beginnt mit: {api_key[:10]}...")
        return False
    
    print("‚úÖ G√ºltiger OpenRouter API-Schl√ºssel gefunden!")
    print(f"   Schl√ºssel beginnt mit: {api_key[:15]}...")
    print()
    
    # Modell pr√ºfen
    model = os.getenv('DEFAULT_MODEL', 'mistralai/mistral-small-24b-instruct-2501:free')
    print(f"‚úÖ Verwendetes AI-Modell: {model}")
    
    print()
    print("üéâ Setup ist korrekt! Sie k√∂nnen das Interview starten.")
    return True

if __name__ == "__main__":
    if not check_setup():
        print()
        print("‚ö†Ô∏è  Bitte beheben Sie die Probleme oben und versuchen Sie es erneut.")
        exit(1)
    else:
        print()
        print("‚ñ∂Ô∏è  Um ein Interview zu starten:")
        print("   python interview.py --questions questions.json --format md --verbose")
